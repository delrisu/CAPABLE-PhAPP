[{"E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\index.js":"1","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\App.js":"2","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Patients.js":"3","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Documentation.js":"4","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Navbar.js":"5","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Home.js":"6","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Dashboard.js":"7","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\PatientsForm.js":"8","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Prescriptions.js":"9","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\PrescriptionsForm.js":"10","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\PatientCard.js":"11"},{"size":218,"mtime":1608417884000,"results":"12","hashOfConfig":"13"},{"size":1109,"mtime":1611326631076,"results":"14","hashOfConfig":"13"},{"size":23985,"mtime":1611504006929,"results":"15","hashOfConfig":"13"},{"size":359,"mtime":1606946366000,"results":"16","hashOfConfig":"13"},{"size":2111,"mtime":1611327155884,"results":"17","hashOfConfig":"13"},{"size":910,"mtime":1606946366000,"results":"18","hashOfConfig":"13"},{"size":1952,"mtime":1606946366000,"results":"19","hashOfConfig":"13"},{"size":50045,"mtime":1611507630056,"results":"20","hashOfConfig":"13"},{"size":16563,"mtime":1611335377195,"results":"21","hashOfConfig":"13"},{"size":24464,"mtime":1611507601642,"results":"22","hashOfConfig":"13"},{"size":6747,"mtime":1608552009000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ufor2f",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\index.js",[],["51","52"],"E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\App.js",[],"E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Patients.js",["53","54"],"E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Documentation.js",[],"E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Navbar.js",["55"],"import React                from \"react\";\nimport { NavLink }          from \"react-router-dom\";\nimport { AiOutlineHome }    from \"react-icons/ai\"\nimport { ImNewspaper }      from \"react-icons/im\"\nimport { BsPeopleFill }     from \"react-icons/bs\"\nimport { CgFileDocument }   from \"react-icons/cg\"\nimport { BiPowerOff }       from \"react-icons/bi\"\nimport logo                 from \"./capable_logo.png\";\nimport \"./bootstrap.min.css\";\nimport \"./styles.css\";\n\nexport default class Navbar extends React.Component {\n    render() {\n        return (\n            <nav className=\"Nav\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/Patients\">\n                            <img className=\"nav-logo\" src={logo} alt={logo} />\n                        </NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link-non-active\" activeClassName=\"nav-link-active\" to=\"/Patients\">\n                            <div className=\"link-color\"><BsPeopleFill className=\"menu-icon\"/> My Patients</div>\n                        </NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link-non-active\" activeClassName=\"nav-link-active\" to=\"/Dashboard\">\n                            <div className=\"link-color\"><ImNewspaper className=\"menu-icon\"/> Dashboard</div>\n                        </NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link-non-active\" activeClassName=\"nav-link-active\" to=\"/Documentation\">\n                            <div className=\"link-color\"><CgFileDocument className=\"menu-icon\"/> Documentation</div>\n                        </NavLink>\n                    </li>\n                </ul>\n                <NavLink className=\"log\" to=\"\">\n                    <div className=\"logout\"><BiPowerOff className=\"menu-icon\"/> Log out</div>\n                </NavLink>\n            </nav>\n        );\n    }\n}","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Home.js",["56"],"import React from 'react'\nimport \"./bootstrap.min.css\";\nimport \"./styles.css\";\n\n\nexport default function Home() {\n    return (\n        <div className=\"content-main\">\n            <h1><span className=\"badge badge-dark\">Homepage</span></h1>\n\n            <div className=\"welcome-screen\">\n                <div className=\"jumbotron\">\n                    <h1 className=\"display-4\">Hello, world!</h1>\n                    <p className=\"lead\">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>\n                    <hr className=\"my-4\"></hr>\n                    <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>\n                    <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Learn more</a>\n                </div>\n            </div>\n        </div>\n        \n\n    )\n}\n","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Dashboard.js",[],"E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\PatientsForm.js",[],"E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Prescriptions.js",["57","58","59","60"],"import MaterialTable        from 'material-table';\nimport React, { useState } from 'react';\nimport Modal                from 'react-bootstrap/Modal'\nimport { Button }           from 'reactstrap';\nimport PrescriptionsForm    from './PrescriptionsForm'\nimport status_tick from     './images/status_tick.png';\nimport status_x from        './images/status_x.png';\nimport \"./bootstrap.min.css\";\nimport \"./styles.css\";\n\nconst codes = {\n    codeine:        387494007,\n    morphine:       373529000,\n    nivolumab:      704191007,\n    sunitinib:      421192001,\n    loperamide:     387040009,\n    budesonide:     395726003,\n    st_johns_wort:  412515006\n}\n\nconst columns = [\n    {\n        title: \"Medicine\",\n        field: \"medicine\"\n    },\n    {\n        title: \"Using from\",\n        field: \"from\"\n    },\n    {\n        title: \"Using to\",\n        field: \"to\"\n    },\n    {\n        title: \"Take as needed\",\n        field: \"asNeeded\"\n    },\n    {\n        title: \"Dosing\",\n        field: \"dosing\"\n    },\n    {\n        title: \"Status\",\n        field: \"status\",\n        render: rowData => <img src={rowData.status} style={{width: 20, borderRadius: '50%'}}/>\n    }\n]\n\nexport default function Prescriptions({client, data, comms, commIDs, drafts, show, onHide, patientRef}) {\n    const [prescEditShow, setPrescEditShow] = useState(false);\n    const [prescFormEditData, setPrescFormEditData] = useState({});\n    const [prescNewShow, setPrescNewShow] = useState(false);\n    // const [prescFormEditData, setPrescFormEditData] = useState({});\n    function convertRowData () {\n        let rowData = data;\n        let i, j;\n        let medications = []\n        console.log(\"In prescs:\")\n        console.log(rowData.length)\n        // for (i=0; i<4; i++) {\n        //     console.log(rowData[i].resource.id)\n        // }\n        \n        for (i = 0; i < rowData.length; i++) {\n            console.log(rowData[i].resource.id)\n            let medData = {\n                id:             rowData[i].resource.id,\n                patient:        rowData[i].resource.subject.reference,\n                medicine:       rowData[i].resource.medicationCodeableConcept.coding[0].display,\n                medicineCode:   rowData[i].resource.medicationCodeableConcept.coding[0].code,\n                from:           rowData[i].resource.dosageInstruction[0].timing.repeat.boundsPeriod.start,\n                to:             rowData[i].resource.dosageInstruction[0].timing.repeat.boundsPeriod.end,\n                asNeeded:       rowData[i].resource.dosageInstruction[0].asNeededBoolean,\n                frequency:      rowData[i].resource.dosageInstruction[0].timing.repeat.frequency,\n                period:         rowData[i].resource.dosageInstruction[0].timing.repeat.period,\n                periodUnit:     rowData[i].resource.dosageInstruction[0].timing.repeat.periodUnit,\n                doseValue:      rowData[i].resource.dosageInstruction[0].doseAndRate[0].doseQuantity.value,\n                doseUnit:       rowData[i].resource.dosageInstruction[0].doseAndRate[0].doseQuantity.unit,\n                dosing:         \"\",\n                status:         comms.includes(rowData[i].resource.id) ? status_x : status_tick,\n                draft:          null,\n                attachedCommID:   null\n            }\n\n            drafts.forEach(element => {\n                if (medData.medicineCode === element.medicationCodeableConcept.coding[0].code) {\n                    medData.draft = element\n                }    \n            });\n            commIDs.forEach(element => {\n                if (element[1] === medData.id) {\n                    medData.attachedCommID = element[0]\n                }\n            })\n\n            medData.dosing = medData.frequency + \"x \" + medData.doseValue + medData.doseUnit + \" every \" + medData.period + \" \" + medData.periodUnit;\n            medications.push(medData);\n        }\n        return medications;\n    }\n\n    const medicationsData = convertRowData();\n    console.log(\"MedData:\")\n    console.log(medicationsData)\n    return (\n        <div>\n            <Modal\n                size=\"xl\"\n                // dialogClassName=\"modal-90w\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                show={show}\n                onHide={onHide}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Prescriptions\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <MaterialTable\n                        columns={columns}\n                        data={medicationsData}\n                        title=\"\"\n                        onRowClick={(event, rowData) => {\n                            if (rowData.status === status_x) {\n                                console.log(rowData.draft)\n                                let tempDraft = {\n                                    id:             rowData.draft.resource.id,\n                                    patient:        rowData.draft.resource.subject.reference,\n                                    medicine:       rowData.draft.resource.medicationCodeableConcept.coding[0].display,\n                                    medicineCode:   rowData.draft.resource.medicationCodeableConcept.coding[0].code,\n                                    from:           rowData.draft.resource.dosageInstruction[0].timing.repeat.boundsPeriod.start,\n                                    to:             rowData.draft.resource.dosageInstruction[0].timing.repeat.boundsPeriod.end,\n                                    asNeeded:       rowData.draft.resource.dosageInstruction[0].asNeededBoolean,\n                                    frequency:      rowData.draft.resource.dosageInstruction[0].timing.repeat.frequency,\n                                    period:         rowData.draft.resource.dosageInstruction[0].timing.repeat.period,\n                                    periodUnit:     rowData.draft.resource.dosageInstruction[0].timing.repeat.periodUnit,\n                                    doseValue:      rowData.draft.resource.dosageInstruction[0].doseAndRate[0].doseQuantity.value,\n                                    doseUnit:       rowData.draft.resource.dosageInstruction[0].doseAndRate[0].doseQuantity.unit,\n                                    dosing:         \"\"\n                                }\n                                tempDraft.dosing = tempDraft.frequency + \"x \" + tempDraft.doseValue + tempDraft.doseUnit + \" every \" + tempDraft.period + \" \" + tempDraft.periodUnit;\n                                let confirmMsg = ''\n                                confirmMsg = rowData.from !== tempDraft.from && confirmMsg.concat(tempDraft.from + '\\n')\n                                confirmMsg = rowData.to !== tempDraft.to && confirmMsg.concat(tempDraft.to + '\\n')\n                                confirmMsg = rowData.asNeeded !== tempDraft.asNeeded && confirmMsg.concat(tempDraft.asNeeded + '\\n')\n                                if (rowData.frequency !== tempDraft.frequency || rowData.period !== tempDraft.period || rowData.periodUnit !== tempDraft.periodUnit || rowData.doseValue !== tempDraft.doseValue || rowData.doseUnit !== tempDraft.doseUnit) {\n                                    confirmMsg = confirmMsg.concat(tempDraft.dosing)\n                                }\n                                // confirmMsg = rowData.frequency !== tempDraft.frequency && confirmMsg.concat(tempDraft.frequency + '\\n')\n                                // confirmMsg = rowData.period !== tempDraft.period && confirmMsg.concat(tempDraft.period + '\\n')\n                                // confirmMsg = rowData.periodUnit !== tempDraft.periodUnit && confirmMsg.concat(tempDraft.periodUnit + '\\n')\n                                // confirmMsg = rowData.doseValue !== tempDraft.doseValue && confirmMsg.concat(tempDraft.doseValue + '\\n')\n                                // confirmMsg = rowData.doseUnit !== tempDraft.doseUnit && confirmMsg.concat(tempDraft.to + '\\n')\n\n                                if (window.confirm('Do you wish to accept these suggested changes?\\n' + confirmMsg)) {\n                                    let entryOld = {\n                                        resourceType: \"MedicationRequest\",\n                                        status: \"canceled\",\n                                        intent: \"order\",\n                                        medicationCodeableConcept: {\n                                            coding: [{\n                                                system: \"http://snomed.info/sct\",\n                                                code: rowData.medicineCode,\n                                                display: rowData.medicine\n                                            }]\n                                        },\n                                        subject: {\n                                            reference: \"Patient/\" + rowData.patient\n                                        },\n                                        dosageInstruction: [{\n                                            text: rowData.dosing,\n                                            timing: {\n                                                repeat: {\n                                                    boundsPeriod: {\n                                                        start: rowData.from,\n                                                        end: rowData.to\n                                                    },\n                                                    frequency: rowData.frequency,\n                                                    period: rowData.period,\n                                                    periodUnit: rowData.periodUnit\n                                                }\n                                            },\n                                            asNeededBoolean: rowData.asNeeded,\n                                            doseAndRate: [{\n                                                doseQuantity: {\n                                                    value: rowData.doseValue,\n                                                    unit: rowData.doseUnit,\n                                                    system: \"http://snomed.info/sct\",\n                                                    code: 258684004\n                                                }\n                                            }]\n                                        }]\n                                    }\n                                    client.update({resourceType: 'MedicationRequest', id: rowData.id, body: entryOld})\n\n                                    let entryNew = {\n                                        resourceType: \"MedicationRequest\",\n                                        status: \"active\",\n                                        intent: \"order\",\n                                        medicationCodeableConcept: {\n                                            coding: [{\n                                                system: \"http://snomed.info/sct\",\n                                                code: tempDraft.medicineCode,\n                                                display: tempDraft.medicine\n                                            }]\n                                        },\n                                        subject: {\n                                            reference: \"Patient/\" + tempDraft.patient\n                                        },\n                                        dosageInstruction: [{\n                                            text: tempDraft.dosing,\n                                            timing: {\n                                                repeat: {\n                                                    boundsPeriod: {\n                                                        start: tempDraft.from,\n                                                        end: tempDraft.to\n                                                    },\n                                                    frequency: tempDraft.frequency,\n                                                    period: tempDraft.period,\n                                                    periodUnit: tempDraft.periodUnit\n                                                }\n                                            },\n                                            asNeededBoolean: tempDraft.asNeeded,\n                                            doseAndRate: [{\n                                                doseQuantity: {\n                                                    value: tempDraft.doseValue,\n                                                    unit: tempDraft.doseUnit,\n                                                    system: \"http://snomed.info/sct\",\n                                                    code: 258684004\n                                                }\n                                            }]\n                                        }]\n                                    }\n                                    client.update({resourceType: 'MedicationRequest', id: rowData.id, body: entryNew})\n\n                                    let entryComm = {\n                                        resourceType: \"Communication\",\n                                        status: \"in-progress\"\n                                    }\n                                    client.update({resourceType: 'Communication', id: rowData.attachedCommID, body: entryComm})\n                                    window.location.reload(false);\n                                }\n                                else {\n                                    alert(\"Rejected suggested changes!\")\n                                }\n                            }\n                            else {\n                                alert(\"This prescription does not require any action to be taken!\")\n                                // window.location.reload(false);\n                            }\n                        }}\n                        actions={[\n                            {\n                                icon: 'add',\n                                tooltip: 'Add a new prescription',\n                                isFreeAction: true,\n                                onClick: (event, rowData) => {\n                                    setPrescNewShow(true);\n                                }\n                            },\n                            {\n                                icon: 'delete',\n                                tooltip: 'Remove this prescription',\n                                onClick: (event, rowData) => {\n                                    client.delete({resourceType: 'MedicationRequest', id: rowData.id});\n                                }\n                            },\n                            {\n                                icon: 'edit',\n                                tooltip: 'Edit prescription',\n                                onClick: (event, rowData) => {\n                                    setPrescEditShow(true);\n                                    setPrescFormEditData(rowData);\n                                }\n                            }\n                        ]}\n                        options={\n                            {\n                                pageSize: 5\n                            },\n                            {\n                                searchFieldAlignment: 'left'\n                            }\n                        }\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button onClick={onHide}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n            {prescNewShow===true &&\n                <PrescriptionsForm\n                    show={prescNewShow}\n                    onHide={() => setPrescNewShow(false)}\n                    client={client}\n                    data={false}\n                    patient={patientRef.id}\n                />\n            }\n            {prescEditShow===true &&\n                <PrescriptionsForm\n                    show={prescEditShow}\n                    onHide={() => setPrescEditShow(false)}\n                    client={client}\n                    data={prescFormEditData}\n                    patient={patientRef.id}\n                />\n            }\n            {\n\n            }\n        </div>\n    )\n}","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\PrescriptionsForm.js",["61","62"],"E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\PatientCard.js",["63"],"import { Modal, Row } from \"react-bootstrap\";\nimport \"./bootstrap.min.css\";\nimport \"./styles.css\";\n\nfunction convertToBool(input) {\n    if (input === 0) {\n        return \"False\"\n    }\n    else {\n        return \"True\"\n    }\n} \n\nexport default function PatientCard({show, onHide, data}) {\n    return (\n        <Modal\n            //{...this.props}\n            size=\"md\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            show={show}\n            onHide={onHide}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Patient's card\n                </Modal.Title>\n            </Modal.Header>\n                <Modal.Body>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            First name: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{data.fname}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Second name: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{data.sname}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Date of birth: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{data.birthDate}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Gender: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{data.gender}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Weight: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{data.weight} kg</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Height: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{data.height} cm</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            BMI: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{data.bmi}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Years smoking: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{data.yearsSmoking}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Years drinking: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{data.yearsDrinking}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Dyssomnia: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{convertToBool(data.dyssomnia)}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Diabetes mellitus: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{convertToBool(data.diabetes)}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Hypertension: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{convertToBool(data.hypertension)}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Collagen vascular: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{convertToBool(data.collagenVascular)}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            IBD: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{convertToBool(data.ibd)}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Recent gastro operation: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{convertToBool(data.gastroOperation)}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Physical activity (average): \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{data.physicalActivity}x per week</i></b>\n                        </div>\n                    </div>\n                </Modal.Body>\n            <Modal.Footer>\n\n            </Modal.Footer>\n        </Modal>\n    )\n}",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":2,"column":10,"nodeType":"70","messageId":"71","endLine":2,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":496,"column":30,"nodeType":"74","messageId":"75","endLine":496,"endColumn":31},{"ruleId":"68","severity":1,"message":"76","line":3,"column":10,"nodeType":"70","messageId":"71","endLine":3,"endColumn":23},{"ruleId":"77","severity":1,"message":"78","line":17,"column":21,"nodeType":"79","endLine":17,"endColumn":82},{"ruleId":"68","severity":1,"message":"80","line":11,"column":7,"nodeType":"70","messageId":"71","endLine":11,"endColumn":12},{"ruleId":"81","severity":1,"message":"82","line":45,"column":28,"nodeType":"79","endLine":45,"endColumn":96},{"ruleId":"68","severity":1,"message":"83","line":56,"column":16,"nodeType":"70","messageId":"71","endLine":56,"endColumn":17},{"ruleId":"72","severity":1,"message":"73","line":282,"column":30,"nodeType":"74","messageId":"75","endLine":282,"endColumn":31},{"ruleId":"68","severity":1,"message":"84","line":145,"column":13,"nodeType":"70","messageId":"71","endLine":145,"endColumn":21},{"ruleId":"68","severity":1,"message":"84","line":218,"column":9,"nodeType":"70","messageId":"71","endLine":218,"endColumn":17},{"ruleId":"68","severity":1,"message":"85","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":20},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'AiOutlineHome' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'codes' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'j' is defined but never used.","'response' is assigned a value but never used.","'Row' is defined but never used.","no-global-assign","no-unsafe-negation"]