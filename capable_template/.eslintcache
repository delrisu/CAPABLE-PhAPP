[{"E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\index.js":"1","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\App.js":"2","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Patients.js":"3","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Documentation.js":"4","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Navbar.js":"5","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Home.js":"6","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Dashboard.js":"7","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\PatientsForm.js":"8","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Prescriptions.js":"9","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\PrescriptionsForm.js":"10","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\PatientCard.js":"11"},{"size":218,"mtime":1608417884000,"results":"12","hashOfConfig":"13"},{"size":1128,"mtime":1611746720358,"results":"14","hashOfConfig":"13"},{"size":27632,"mtime":1611831733046,"results":"15","hashOfConfig":"13"},{"size":359,"mtime":1606946366000,"results":"16","hashOfConfig":"13"},{"size":2114,"mtime":1611746745378,"results":"17","hashOfConfig":"13"},{"size":910,"mtime":1606946366000,"results":"18","hashOfConfig":"13"},{"size":1952,"mtime":1606946366000,"results":"19","hashOfConfig":"13"},{"size":51029,"mtime":1611695372959,"results":"20","hashOfConfig":"13"},{"size":21107,"mtime":1611832986976,"results":"21","hashOfConfig":"13"},{"size":24764,"mtime":1611655342165,"results":"22","hashOfConfig":"13"},{"size":6747,"mtime":1608552009000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ufor2f",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\index.js",[],["51","52"],"E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\App.js",[],"E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Patients.js",["53"],"E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Documentation.js",[],"E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Navbar.js",[],"E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Home.js",["54"],"import React from 'react'\nimport \"./bootstrap.min.css\";\nimport \"./styles.css\";\n\n\nexport default function Home() {\n    return (\n        <div className=\"content-main\">\n            <h1><span className=\"badge badge-dark\">Homepage</span></h1>\n\n            <div className=\"welcome-screen\">\n                <div className=\"jumbotron\">\n                    <h1 className=\"display-4\">Hello, world!</h1>\n                    <p className=\"lead\">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>\n                    <hr className=\"my-4\"></hr>\n                    <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>\n                    <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Learn more</a>\n                </div>\n            </div>\n        </div>\n        \n\n    )\n}\n",["55","56"],"E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Dashboard.js",[],"E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\PatientsForm.js",[],"E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\Prescriptions.js",["57","58","59","60"],"E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\PrescriptionsForm.js",["61","62"],"import React, { Component } from 'react';\nimport Modal                from 'react-bootstrap/Modal'\nimport { Button }           from 'reactstrap';\nimport \"./bootstrap.min.css\";\nimport \"./styles.css\";\n\nclass PrescriptionForm extends Component {\n\n    constructor (props) {\n        super(props);\n        if (this.props.data === false) {\n            this.state = {\n                id:             '',\n                patient:        this.props.patient, //this.props.data\n                medicine:       '',\n                medicineCode:   '',\n                from:           '',\n                to:             '',\n                asNeeded:       false,\n                frequency:      0,\n                period:         0,\n                periodUnit:     '',\n                doseValue:      0,\n                doseUnit:       'mg',\n                dosing:         ''\n            };\n        }\n        else {\n            this.state = {\n                id:             this.props.data.id,\n                patient:        this.props.data.patient,\n                medicine:       this.props.data.medicine,\n                medicineCode:   this.props.data.medicineCode,\n                from:           this.props.data.from,\n                to:             this.props.data.to,\n                asNeeded:       this.props.data.asNeeded,\n                frequency:      this.props.data.frequency,\n                period:         this.props.data.period,\n                periodUnit:     this.props.data.periodUnit,\n                doseValue:      this.props.data.doseValue,\n                doseUnit:       this.props.data.doseUnit,\n                dosing:         this.props.data.dosing\n            };\n        }\n        this.codes = {\n            mg:             258684004,\n            codeine:        387494007,\n            morphine:       373529000,\n            nivolumab:      704191007,\n            sunitinib:      421192001,\n            loperamide:     387040009,\n            budesonide:     395726003,\n            st_johns_wort:  412515006\n        }\n        this.codesRev = {\n            258684004:  \"mg\",\n            387494007:  \"Codeine\",\n            373529000:  \"Morphine\",\n            704191007:  \"Nivolumab\",\n            421192001:  \"Sunitinib\",\n            387040009:  \"Loperamide\",\n            395726003:  \"Budesonide\",\n            412515006:  \"St John's Wort\"\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.addNewPrescription = this.addNewPrescription.bind(this);\n        this.updatePrescription = this.updatePrescription.bind(this);\n    }\n\n    handleChange (event) {\n        this.setState({ [event.target.name]: event.target.value });\n        console.log(event.target.value);\n    }\n\n    async addNewPrescription () {\n        let tmpStr = this.state.frequency + \"x \" + this.state.doseValue + this.state.doseUnit + \" every \" + this.state.period + \" \" + this.state.periodUnit\n        this.state.dosing = tmpStr;\n        console.log(\"Dosing:\")\n        console.log(this.state.dosing)\n        switch(this.state.medicine) {\n            case \"Nivolumab\":\n                this.state.medicineCode = this.codes.nivolumab;\n                break;\n            case \"Codeine\":\n                this.state.medicineCode = this.codes.codeine;\n                break;\n            case \"Morphine\":\n                this.state.medicineCode = this.codes.morphine;\n                break;\n            case \"Sunitinib\":\n                this.state.medicineCode = this.codes.sunitinib;\n                break;\n            case \"Loperamide\":\n                this.state.medicineCode = this.codes.loperamide;\n                break;\n            case \"Budesonide\":\n                this.state.medicineCode = this.codes.budesonide;\n                break;\n            case \"St John's Wort\":\n                this.state.medicineCode = this.codes.st_johns_wort;\n                break;\n            default:\n                break;\n        }\n        \n        let entry = {\n                resourceType: \"MedicationRequest\",\n                status: \"active\",\n                intent: \"order\",\n                medicationCodeableConcept: {\n                    coding: [{\n                        system: \"http://snomed.info/sct\",\n                        code: this.state.medicineCode,\n                        display: this.state.medicine\n                    }]\n                },\n                subject: {\n                    reference: \"Patient/\" + this.state.patient,\n                    type: \"Patient\",\n                    identifier: {\n                        value: this.state.patient\n                    }\n                },\n                dosageInstruction: [{\n                    text: this.state.dosing,\n                    timing: {\n                        repeat: {\n                            boundsPeriod: {\n                                start: this.state.from,\n                                end: this.state.to\n                            },\n                            frequency: this.state.frequency,\n                            period: this.state.period,\n                            periodUnit: this.state.periodUnit\n                        }\n                    },\n                    asNeededBoolean: this.state.asNeeded,\n                    doseAndRate: [{\n                        doseQuantity: {\n                            value: this.state.doseValue,\n                            unit: this.state.doseUnit,\n                            system: \"http://snomed.info/sct\",\n                            code: this.codes.mg\n                        }\n                    }]\n                }]\n        }\n        // console.log(this.props.client)\n        let response = await this.props.client.create({resourceType: \"MedicationRequest\", body: entry})\n            .then((resource) => {\n                let entryComm = {\n                    resourceType: \"Communication\",\n                    status: \"in-progress\",\n                    payload: [\n                        {\n                            contentReference: {\n                                reference: \"MedicationRequest/\" + resource.id,\n                                type: \"MedicationRequest\",\n                                identifier: {\n                                    value: resource.id\n                                }\n                            }\n                        }\n                    ]\n                }\n\n                this.props.client.create({resourceType: \"Communication\", body: entryComm});\n            })\n        \n        if (this.props.prescCount === undefined || this.props.prescCount < 1) {\n            let entryPatient = {\n                resourceType: \"Communication\",\n                status: \"in-progress\",\n                payload: [\n                    {\n                        contentReference: {\n                            reference: \"Patient/\" + this.state.patient,\n                            type: \"Patient\",\n                            identifier: {\n                                value: this.state.patient\n                            }\n                        }\n                    }\n                ]\n            }\n            await this.props.client.create({resourceType: \"Communication\", body: entryPatient});\n        }\n        window.location.reload(false);\n    }\n\n    async updatePrescription () {\n        let tmpStr = this.state.frequency + \"x \" + this.state.doseValue + this.state.doseUnit + \" every \" + this.state.period + \" \" + this.state.periodUnit\n        this.state.dosing = tmpStr;\n        let entry = {\n            resourceType: \"MedicationRequest\",\n            id: this.state.id,\n            status: \"active\",\n            intent: \"order\",\n            dosageInstruction: [{\n                text: this.state.dosing,\n                timing: {\n                    repeat: {\n                        boundsPeriod: {\n                            start: this.state.begin,\n                            end: this.state.end\n                        },\n                        frequency: this.state.frequency,\n                        period: this.state.period,\n                        periodUnit: this.state.periodUnit\n                    }\n                },\n                asNeededBoolean: this.state.asNeeded,\n                doseAndRate: [{\n                    doseQuantity: {\n                        value: this.state.doseValue,\n                        unit: this.state.doseUnit,\n                        system: \"http://snomed.info/sct\",\n                        code: this.codes.mg\n                    }\n                }]\n            }]\n    }\n    // console.log(this.props.client)\n    let response = await this.props.client.update({resourceType: \"MedicationRequest\", id: this.state.id, body: entry})\n    }\n\n    render() {\n\n        if (this.props.data === false) {\n            console.log(\"State: \" + this.state.patient)\n            console.log(\"Props: \" + this.props.patient)\n            console.log(\"Full state:\")\n            console.log(this.state)\n            return (\n                <Modal\n                    //{...this.props}\n                    size=\"xl\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                    centered\n                    show={this.props.show}\n                    onHide={this.props.onHide}\n                >\n                <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Adding a new prescription ...\n                </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                <form>\n                    <div className=\"form-controller\">\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-3\">\n                                <label htmlFor=\"medicine\">Medicine</label>\n                                <select name=\"medicine\" \n                                        onChange={this.handleChange}\n                                        id=\"medicine\"\n                                        className=\"form-control\">\n                                    <option value=\"\" selected disabled hidden>Choose...</option>\n                                    <optgroup label=\"for cancer\">\n                                        <option value=\"Codeine\">Codeine</option>\n                                        <option value=\"Morphine\">Morphine</option>\n                                        <option value=\"Nivolumab\">Nivolumab</option>\n                                        <option value=\"Sunitinib\">Sunitinib</option>\n                                    </optgroup>\n                                    <optgroup label=\"for side effects\">\n                                        <option value=\"Loperamide\">Loperamide</option>\n                                        <option value=\"Budesonide\">Budesonide</option>\n                                    </optgroup>\n                                    <optgroup label=\"for other problems\">\n                                        <option value=\"St John's Wort\">St John's Wort</option>\n                                    </optgroup>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"form-row\" id=\"section-label\">Using period</div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"from\">Begin</label>\n                                <input type=\"date\" \n                                        name=\"from\" \n                                        onChange={this.handleChange}\n                                        id=\"from\"\n                                        className=\"form-control\"\n                                />\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"to\">End</label>\n                                <input type=\"date\"\n                                        name=\"to\" \n                                        onChange={this.handleChange}\n                                        id=\"to\"\n                                        className=\"form-control\"\n                                />\n                            </div>\n                        </div>                 \n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"asNeeded\">Take as needed</label>\n                                <select name=\"asNeeded\" \n                                        onChange={this.handleChange}\n                                        id=\"asNeeded\"\n                                        className=\"form-control\">\n                                    <option value=\"\" selected disabled hidden>Choose...</option>\n                                    <option value={false}>False</option>\n                                    <option value={true}>True</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"form-row\" id=\"section-label\">Dosing</div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"number\"\n                                        name=\"doseValue\"\n                                        onChange={this.handleChange}\n                                        id=\"doseValue\"\n                                        className=\"form-control\"\n                                />\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <select name=\"doseUnit\"\n                                        onChange={this.handleChange}\n                                        id=\"doseUnit\"\n                                        className=\"form-control\">\n                                    <option value=\"\" selected disabled hidden>Choose...</option>\n                                    <option value=\"mg\">mg</option>\n                                </select>\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"number\"\n                                        name=\"frequency\"\n                                        onChange={this.handleChange}\n                                        id=\"frequency\"\n                                        className=\"form-control\"\n                                />\n                            </div>\n                            <div className=\"form-group col-md-2\">times every</div>\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"number\"\n                                        name=\"period\"\n                                        onChange={this.handleChange}\n                                        id=\"period\"\n                                        className=\"form-control\"\n                                />\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <select name=\"periodUnit\" \n                                        onChange={this.handleChange}\n                                        id=\"periodUnit\"\n                                        className=\"form-control\">\n                                    <option value=\"\" selected disabled hidden>Choose...</option>\n                                    <option value=\"min\">minute(s)</option>\n                                    <option value=\"h\">hour(s)</option>\n                                    <option value=\"d\">day(s)</option>\n                                    <option value=\"wk\">week(s)</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button onClick={() => {this.addNewPrescription(); this.props.onHide()}}>Add</Button>\n                    <Button onClick={this.props.onHide}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n            )\n        }\n        else {\n            console.log(\"State: \" + this.state.patient)\n            console.log(\"Props: \" + this.props.patient)\n            console.log(\"Full state:\")\n            console.log(this.state)\n            return (\n                <Modal\n                    size=\"xl\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                    centered\n                    show={this.props.show}\n                    onHide={this.props.onHide}\n                >\n                <Modal.Header closeButton>\n                  <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Editing a prescription ...\n                  </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                <form>\n                    <div className=\"form-controller\">\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"medicine\">medicine</label>\n                                <select name=\"medicine\" \n                                        onChange={this.handleChange}\n                                        id=\"medicine\"\n                                        className=\"form-control\"\n                                        value={this.state.medicine}\n                                        disabled>\n                                    <option value=\"\" selected disabled hidden>Choose...</option>\n                                    <optgroup label=\"for cancer\">\n                                        <option value=\"codeine\">Codeine</option>\n                                        <option value=\"morphine\">Morphine</option>\n                                        <option value=\"nivolumab\">Nivolumab</option>\n                                        <option value=\"sunitinib\">Sunitinib</option>\n                                    </optgroup>\n                                    <optgroup label=\"for side effects\">\n                                        <option value=\"loperamide\">Loperamide</option>\n                                        <option value=\"budesonide\">Budesonide</option>\n                                    </optgroup>\n                                    <optgroup label=\"for other problems\">\n                                        <option value=\"st john's wort\">St John's Wort</option>\n                                    </optgroup>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"form-row\" id=\"section-label\">Using period</div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"from\">Begin</label>\n                                <input type=\"date\" \n                                        name=\"from\" \n                                        onChange={this.handleChange}\n                                        id=\"from\"\n                                        className=\"form-control\"\n                                        value={this.state.begin}\n                                        disabled\n                                />\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"end\">End</label>\n                                <input type=\"date\"\n                                        name=\"end\" \n                                        onChange={this.handleChange}\n                                        id=\"end\"\n                                        className=\"form-control\"\n                                        value={this.state.end}\n                                />\n                            </div>\n                        </div>                 \n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"asNeeded\">Take as needed</label>\n                                <select name=\"asNeeded\" \n                                        onChange={this.handleChange}\n                                        id=\"asNeeded\"\n                                        className=\"form-control\"\n                                        value={this.state.asNeeded}>\n                                    <option value=\"\" selected disabled hidden>Choose...</option>\n                                    <option value={0}>False</option>\n                                    <option value={1}>True</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"form-row\" id=\"section-label\">Dosing</div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"number\"\n                                        name=\"doseValue\"\n                                        onChange={this.handleChange}\n                                        id=\"doseValue\"\n                                        className=\"form-control\"\n                                        value={this.state.doseValue}\n                                />\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <select name=\"doseUnit\"\n                                        onChange={this.handleChange}\n                                        id=\"doseUnit\"\n                                        className=\"form-control\"\n                                        value={this.state.doseUnit}>\n                                    <option value=\"\" selected disabled hidden>Choose...</option>\n                                    <option value=\"mg\">mg</option>\n                                </select>\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"number\"\n                                        name=\"frequency\"\n                                        onChange={this.handleChange}\n                                        id=\"frequency\"\n                                        className=\"form-control\"\n                                        value={this.state.frequency}\n                                />\n                            </div>\n                            <div className=\"form-group col-md-2\">times every</div>\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"number\"\n                                        name=\"period\"\n                                        onChange={this.handleChange}\n                                        id=\"period\"\n                                        className=\"form-control\"\n                                        value={this.state.period}\n                                />\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <select name=\"periodUnit\" \n                                        onChange={this.handleChange}\n                                        id=\"periodUnit\"\n                                        className=\"form-control\"\n                                        value={this.state.periodUnit}>\n                                    <option value=\"\" selected disabled hidden>Choose...</option>\n                                    <option value=\"min\">minute(s)</option>\n                                    <option value=\"h\">hour(s)</option>\n                                    <option value=\"d\">day(s)</option>\n                                    <option value=\"wk\">week(s)</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button onClick={() => {this.updatePrescription(); this.props.onHide()}}>Save</Button>\n                    <Button onClick={this.props.onHide}>Close</Button>\n                </Modal.Footer>\n              </Modal>\n            )\n        }\n    }\n}\n\nexport default PrescriptionForm;","E:\\GitHub\\CAPABLE-PhAPP\\capable_template\\src\\PatientCard.js",["63"],"import { Modal, Row } from \"react-bootstrap\";\nimport \"./bootstrap.min.css\";\nimport \"./styles.css\";\n\nfunction convertToBool(input) {\n    if (input === 0) {\n        return \"False\"\n    }\n    else {\n        return \"True\"\n    }\n} \n\nexport default function PatientCard({show, onHide, data}) {\n    return (\n        <Modal\n            //{...this.props}\n            size=\"md\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            show={show}\n            onHide={onHide}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Patient's card\n                </Modal.Title>\n            </Modal.Header>\n                <Modal.Body>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            First name: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{data.fname}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Second name: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{data.sname}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Date of birth: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{data.birthDate}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Gender: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{data.gender}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Weight: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{data.weight} kg</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Height: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{data.height} cm</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            BMI: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{data.bmi}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Years smoking: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{data.yearsSmoking}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Years drinking: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{data.yearsDrinking}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Dyssomnia: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{convertToBool(data.dyssomnia)}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Diabetes mellitus: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{convertToBool(data.diabetes)}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Hypertension: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{convertToBool(data.hypertension)}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Collagen vascular: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{convertToBool(data.collagenVascular)}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            IBD: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{convertToBool(data.ibd)}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Recent gastro operation: \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{convertToBool(data.gastroOperation)}</i></b>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            Physical activity (average): \n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <b><i>{data.physicalActivity}x per week</i></b>\n                        </div>\n                    </div>\n                </Modal.Body>\n            <Modal.Footer>\n\n            </Modal.Footer>\n        </Modal>\n    )\n}",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":553,"column":30,"nodeType":"70","messageId":"71","endLine":553,"endColumn":31},{"ruleId":"72","severity":1,"message":"73","line":17,"column":21,"nodeType":"74","endLine":17,"endColumn":82},{"ruleId":"64","replacedBy":"75"},{"ruleId":"66","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":12,"column":7,"nodeType":"79","messageId":"80","endLine":12,"endColumn":12},{"ruleId":"81","severity":1,"message":"82","line":46,"column":28,"nodeType":"74","endLine":46,"endColumn":96},{"ruleId":"77","severity":1,"message":"83","line":110,"column":16,"nodeType":"79","messageId":"80","endLine":110,"endColumn":17},{"ruleId":"68","severity":1,"message":"69","line":377,"column":30,"nodeType":"70","messageId":"71","endLine":377,"endColumn":31},{"ruleId":"77","severity":1,"message":"84","line":149,"column":13,"nodeType":"79","messageId":"80","endLine":149,"endColumn":21},{"ruleId":"77","severity":1,"message":"84","line":224,"column":9,"nodeType":"79","messageId":"80","endLine":224,"endColumn":17},{"ruleId":"77","severity":1,"message":"85","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":20},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["86"],["87"],"no-unused-vars","'codes' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'j' is defined but never used.","'response' is assigned a value but never used.","'Row' is defined but never used.","no-global-assign","no-unsafe-negation"]